/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 19);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(6);

/* Native method references for those with the same name as other `lodash` methods. */
var nativeNow = getNative(Date, 'now');

/**
 * Gets the number of milliseconds that have elapsed since the Unix epoch
 * (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @category Date
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => logs the number of milliseconds it took for the deferred function to be invoked
 */
var now = nativeNow || function() {
  return new Date().getTime();
};

module.exports = now;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 2 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _forEach = __webpack_require__(13);

var _forEach2 = _interopRequireDefault(_forEach);

var _indexOf = __webpack_require__(8);

var _indexOf2 = _interopRequireDefault(_indexOf);

var _isFunction = __webpack_require__(11);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isNumber = __webpack_require__(38);

var _isNumber2 = _interopRequireDefault(_isNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*var isNumber = function (value) {
    return (typeof value === 'number');
};
var isFunction = function (value) {
    return (typeof value === 'function');
};*/
/*
function _Array(arr) {
    this._arr = arr || [];
}
_Array.prototype = {
    _get: function (i) {
        return this._arr[i];
    },
    _getLen: function () {
        return this._arr.length;
    },
    _slice: function (start, end) {
        var self = this;
        var newArr;
        if (isNumber(end)) {
            newArr = self._arr.slice(start, end);
        } else {
            newArr = self._arr.slice(start);
        }
        return new _Array(newArr);
    },
    _push: function (ele) {
        var o = this;
        o._arr.push(ele);
        return o;
    },
    _splice: function (at, count) {
        return this._arr.splice(at, count || 1);
    },
    _join: function (str) {
        return this._arr.join(str);
    },
    _concat: function (arr) {
        var newArr = this._arr.concat(arr);
        return new _Array(newArr);
    },
    _map: function (process) {
        var arr = this;
        var _arr = arr._arr;
        if (_arr.map) {
            return new _Array(_arr.map(process));
        }
        var res = [];
        for (var i = 0, len = _arr.length; i < len; i = i + 1) {
            res[i] = process(_arr[i], i, arr);
        }
        return new _Array(res);
    },
    _filter: function (prec) {
        var _Arr = this;
        var arr = _Arr._arr;
        if (arr.filter) {
            return new _Array(arr.filter(prec));
        }
        var res = [];
        for (var i = 0, len = arr.length; i < len; i = i + 1) {
            if (prec(arr[i], i, _Arr)) {
                res.push(arr[i]);
            }
        }
        return new _Array(res);
    },
    _indexOf: function (ele) {
        var o = this;
        var _arr = o._arr;
        if (!_arr.indexOf) {
            for (var i = 0, len = _arr.length; i < len; i = i + 1) {
                if (_arr[i] === ele) {
                    return i;
                }
            }
            return -1;
        }
        return _arr.indexOf(ele);
    }
};
_Array._isArray = function (arr) {

    if (Array.isArray) {
        return Array.isArray(arr);
    }
    return Object.prototype.toString.call(arr) === '[object Array]';
};*/

/**
 * @constructor
 */
/*function _Object(obj) {
    this._obj = obj;
}
_Object.prototype = {
    _each: function (process) {
        var _obj = this._obj;
        for (var k in _obj) {
            if (_obj.hasOwnProperty(k)) {
                process(k, _obj[k]);
            }
        }
        return this;
    },
    _isEmpty: function () {
        var _obj = this._obj;
        for (var k in _obj) {
            if (_obj.hasOwnProperty(k)) {
                return false;
            }
        }
        return true;
    }
};*/

/**
 * @constructor
 */
// @flow
/**
 * @constructor
 */
function _Element(value) {
    if (typeof value == 'string') {
        this._ele = document.createElement(value);
    } else {
        this._ele = value;
    }
}
_Element.prototype = {
    _eventList: {
        down: ['mousedown', 'touchstart', 'pointerdown', 'MSPointerDown'],
        move: ['mousemove', 'touchmove', 'pointermove', 'MSPointerMove'],
        up: ['mouseup', 'touchend', 'pointerup', 'MSPointerUp'],
        enter: ['mouseenter'],
        leave: ['mouseleave'],
        cancel: ['touchcancel'],
        click: ['click'],
        scroll: ['scroll'],
        resize: ['resize'],
        blur: ['blur'],
        focus: ['focus'],
        unload: ['unload'],
        pagehide: ['pagehide']
    },
    _clear: function _clear() {
        var o = this;
        var ele = o._ele;
        ele.innerHTML = '';
        return o;
    },
    _hide: function _hide() {
        return this._setStyles({
            display: 'none'
        });
    },
    _show: function _show() {
        return this._setStyles({
            display: 'block'
        });
    },
    _opacity: function _opacity(opacity) {
        return this._setStyles({
            opacity: opacity
        });
    },
    _getAttr: function _getAttr(key) {
        return this._ele.getAttribute(key);
    },
    _setAttrs: function _setAttrs(atts) {
        var o = this;
        var _ele = o._ele;
        (0, _forEach2.default)(atts, function (value, key) {
            _ele.setAttribute(key, value);
        });
        /*new _Object(atts)._each(function (key, value) {
            _ele.setAttribute(key, value);
        });*/
        return o;
    },
    _removeAttrs: function _removeAttrs(keys) {
        var o = this;
        var _ele = o._ele;

        (0, _forEach2.default)(keys, function (key) {
            _ele.removeAttribute(key);
        });

        return o;
    },
    _setProps: function _setProps(props) {
        var o = this;
        var _ele = o._ele;
        (0, _forEach2.default)(props, function (value, key) {
            _ele[key] = value;
        });
        /*new _Object(props)._each(function (key, value) {
            _ele[key] = value;
        });*/
        return o;
    },
    _setStyles: function _setStyles(styles) {
        var o = this;
        var _ele = o._ele;
        (0, _forEach2.default)(styles, function (value, key) {
            _ele.style[key] = value;
        });
        /*new _Object(styles)._each(function (key, value) {
            _ele.style[key] = value;
        });*/
        return o;
    },
    _getParentNode: function _getParentNode() {
        return new _Element(this._ele.parentNode);
    },
    _appendTo: function _appendTo(parent) {
        parent._ele.appendChild(this._ele);
        return this;
    },
    _moveTo: function _moveTo(other) {
        var o = this;
        var ele = o._ele;
        ele.parentNode.removeChild(ele);
        o._appendTo(other);
        return o;
    },
    _appendBefore: function _appendBefore(after) {
        var o = this;
        after._ele.parentNode.insertBefore(o._ele, after._ele);
        return o;
    },
    _appendChild: function _appendChild(child) {
        var o = this;
        child._appendTo(o);
        return o;
    },
    _remove: function _remove() {
        var o = this;
        var _ele = o._ele;
        var parent = _ele.parentNode;
        if (parent) {
            parent.removeChild(_ele);
        }
        return o;
    },
    _toggleClass: function _toggleClass(newClassName) {
        var o = this;
        var _ele = o._ele;
        var classNames = _ele.className ? _ele.className.split(' ') : [];
        var index = (0, _indexOf2.default)(classNames, newClassName);
        if (index === -1) {
            o._addClass(newClassName);
        } else {
            o._removeClass(newClassName);
        }
        return o;
    },
    _addClass: function _addClass(newClassName) {
        var o = this;
        var _ele = o._ele;
        var classNames = _ele.className ? _ele.className.split(' ') : [];
        if ((0, _indexOf2.default)(classNames, newClassName) === -1) {
            classNames.push(newClassName);
            _ele.className = classNames.join(' ');
        }
        return o;
    },
    _removeClass: function _removeClass(oldClassName) {
        var o = this;
        var _ele = o._ele;
        var classNames = _ele.className.split(' ');
        var index = (0, _indexOf2.default)(classNames, oldClassName);
        if (index > -1) {
            classNames._splice(index);
            _ele.className = classNames._join(' ');
        }
        return o;
    },
    _replaceClass: function _replaceClass(newClassName, oldClassName) {
        var o = this;
        o._removeClass(oldClassName)._addClass(newClassName);
        return o;
    },
    _addEvent: function _addEvent(type, cb) {
        var o = this;
        var _ele = o._ele;
        var events = o._eventList[type];
        var flag = false;
        (0, _forEach2.default)(events, function (type) {
            if (document.addEventListener) {
                _ele.addEventListener(type, function (e) {
                    if (flag && flag !== type) {
                        return;
                    }
                    flag = type;
                    cb(new _Event(o, e));
                });
            } else if (document.attachEvent) {
                _ele.attachEvent('on' + type, function (e) {
                    if (flag && flag !== type) {
                        return;
                    }
                    flag = type;
                    cb(new _Event(o, e));
                });
            } else {
                _ele['on' + type] = function (e) {
                    if (flag && flag !== type) {
                        return;
                    }
                    flag = type;
                    cb(new _Event(o, e));
                };
            }
        });
        return this;
    },
    _removeEvent: function _addEvent(type, cb) {
        var o = this;
        var _ele = o._ele;
        var events = o._eventList[type];
        var flag = false;
        (0, _forEach2.default)(events, function (type) {
            if (document.removeEventListener) {
                _ele.removeEventListener(type, cb);
            } else if (document.detachEvent) {
                _ele.detachEvent('on' + type,cb);
            } else {
                _ele['on' + type] = null;
            }
        });
        return this;
    },
    _getBoundingClientRect: function _getBoundingClientRect() {
        return this._ele.getBoundingClientRect();
    },
    _text: function _text(str) {
        var o = this;
        var ele = o._ele;
        o._clear();
        ele.appendChild(document.createTextNode(str));
        return o;
    },
    _html: function _html(str) {
        var o = this;
        var ele = o._ele;
        ele.innerHTML = str;
        return o;
    },
    _clone: function _clone(deep) {
        var o = this;
        var _ele = o._ele;
        var ele;

        var IE8 = function () {
            var canvas = document.createElement('canvas');
            var isCanvas = canvas.getContext && canvas.getContext('2d');
            return !isCanvas;
        }();

        if (deep) {
            if (IE8) {
                var box = document.createElement('div');
                box.innerHTML = _ele.outerHTML;
                ele = new _Element(box.childNodes[0]);
            } else {
                ele = new _Element(o._ele.cloneNode(true));
            }
            _ele.id = 'origin_' + _ele.id;
            ele._removeAttrs(['href']);
        } else {
            ele = new _Element(o._ele.cloneNode(false));
            ele._addClass('sandbox');
        }
        return ele;
    },
    _click: function _click() {
        var o = this;
        o._ele.click();
        return o;
    },
    _width: function _width() {
        var self = this;
        var rect = self._getBoundingClientRect();
        return rect.right - rect.left;
    },
    _getComputedStyle: function _getComputedStyle(styleName) {
        var ele = this._ele;
        var value = window.getComputedStyle ? window.getComputedStyle(ele)[styleName] : ele.currentStyle[styleName];
        return value;
    },
    _fixOverflow: function _fixOverflow() {
        var getStyle = function getStyle(el, styleProp) {
            var y;
            if (el.currentStyle) {
                y = el.currentStyle[styleProp];
            } else if (window.getComputedStyle) {
                y = window.getComputedStyle(el, null).getPropertyValue(styleProp);
            }
            return y;
        };
        var o = this;
        try {
            var self = o._ele;
            var dom = self;
            while (dom.parentNode != document.body && self.offsetTop - dom.parentNode.offsetTop < 160) {
                dom = dom.parentNode;
                if (getStyle(dom, "overflow") == "hidden") {
                    dom.style.overflow = "visible";
                }
            }
        } catch (e) {}

        return o;
    },
    _getElementLeft: function _getElementLeft() {
        var o = this;
        var element = o._ele;
        var actualLeft = element.offsetLeft;
        var current = element.offsetParent;
        while (current !== null) {
            actualLeft += current.offsetLeft;
            current = current.offsetParent;
        }
        return actualLeft;
    },
    _getElementTop: function _getElementTop() {
        var o = this;
        var element = o._ele;
        var actualTop = element.offsetTop;
        var current = element.offsetParent;
        while (current !== null) {
            actualTop += current.offsetTop;
            current = current.offsetParent;
        }
        return actualTop;
    }
};
_Element.$ = function (value) {
    var ele;
    if (typeof value == 'string') {
        if (value[0] === '#') {
            ele = document.getElementById(value.slice(1));
        } else if ("querySelector" in document) {
            //use qs
            ele = document.querySelector(value);
        } else if ((0, _isFunction2.default)(window.jQuery)) {
            //use jquery selector
            ele = window.jQuery(value)[0];
        }
    } else if (value.length) {
        ele = value[0];
    } else {
        ele = value;
    }

    var ELEMENT_NODE;
    try {
        ELEMENT_NODE = Node.ELEMENT_NODE;
    } catch (e) {
        ELEMENT_NODE = 1;
    }

    try {
        if (ele.nodeType === ELEMENT_NODE) {
            return new _Element(ele);
        }
    } catch (e) {
        return false;
    }
};

/**
 * @constructor
 */
function _Event(ele, event) {
    this._e = event;
    this._ele = ele;
}
_Event.prototype = {
    _getX: function _getX() {
        var _e = this._e;

        if ((0, _isNumber2.default)(_e.pageX)) {
            //兼容IE
            return _e.pageX;
        } else if (_e.clientX || _e.clientY) {
            var posx = _e.clientX + document.body.scrollLeft - document.documentElement.clientLeft;
            return posx;
        } else {
            var touch = _e.changedTouches && _e.changedTouches[0];
            return touch.pageX;
        }
    },
    _getY: function _getY() {
        var _e = this._e;

        if ((0, _isNumber2.default)(_e.pageY)) {
            //兼容IE
            return _e.pageY;
        } else if (_e.clientX || _e.clientY) {
            var posy = _e.clientY + document.body.scrollTop - document.documentElement.clientTop;
            return posy;
        } else {
            var touch = _e.changedTouches && _e.changedTouches[0];
            return touch.pageY;
        }
    },
    _preventDefault: function _preventDefault() {
        var self = this;
        var _e = self._e;
        if (_e.cancelable && (0, _isFunction2.default)(_e.preventDefault)) {
            _e.preventDefault();
        } else {
            _e.returnValue = false;
        }
        return self;
    },
    _stopPropagation: function _stopPropagation() {
        var self = this;
        var _e = self._e;
        if ((0, _isFunction2.default)(_e.stopPropagation)) {
            _e.stopPropagation();
        }
        return self;
    }
};
exports.default = _Element;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
// @flow
var win = window;
var doc = win.document;
var input = doc.createElement("input");
var is_iPd = win.navigator.userAgent.match(/(iPad|iPod|iPhone)/i) != null;
var is_mobi = win.navigator.userAgent.toLowerCase().match(/(ipod|iphone|android|coolpad|mmp|smartphone|midp|wap|xoom|symbian|j2me|blackberry|win ce)/i) != null;
var isMobile = is_iPd || is_mobi;

var ieVersion = function () {
    //"!win.ActiveXObject" is evaluated to true in IE11
    if (win.ActiveXObject === undefined) return 100;
    if (!win.XMLHttpRequest) return 6;
    if (!doc.querySelector) return 7;
    if (!doc.addEventListener) return 8;
    if (!win.atob) return 9;
    //"!doc.body.dataset" is faster but the body is null when the DOM is not
    //ready. Anyway, an input tag needs to be created to check if IE is being
    //emulated
    if (!input.dataset) return 10;
    return 11;
}();
exports.ieVersion = ieVersion;
exports.isMobile = isMobile;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var isNative = __webpack_require__(21);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.track = undefined;

var _now = __webpack_require__(0);

var _now2 = _interopRequireDefault(_now);

var _indexOf = __webpack_require__(8);

var _indexOf2 = _interopRequireDefault(_indexOf);

var _element = __webpack_require__(4);

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @flow
var ieVersion = __webpack_require__(5).ieVersion;


function Track() {
    var o = this;
    o.posX = 0;
    o.posY = 0;
    o.scrollLeft = 0;
    o.scrollTop = 0;
    o.lastTime = 0;
    o.cb = {};
    o._data = [];
    o.shouldCheckLocation = true;
    o.location = window.location.href;
    o.previousLocation = '';
    o._init();
}

/* type Point = {
 x: number,
 y: number,
 }

 type TrackType = {
 posX: number,
 posY: number,
 scrollLeft: number,
 scrollTop: number,
 lastTime: number,
 cb: any,
 _data: any[],
 _init: Function,
 _MAX_COUNT: number,
 _updateScrollPos():Point,
 _checkLength(): void,
 _emit(string, string): void,
 _add(type: string, x ?: number, y ?: number): any,
 _delete(number):void,
 _diff(track:any[]) :any[],
 _encode(diff: any[]): string,
 _overflow(num:number): number,
 _getLength(): number,
 _getData(): any[]
 }  */

Track.prototype = {
    _MAX_COUNT: 2000,
    _init: function _init() {
        var o = this;
        var  _move=function(e) {
            o._checkLocation();
            o._updateScrollPos();
            o.posX = e._getX();
            o.posY = e._getY();
            o._add('move', o.posX, o.posY);
            o._checkLength();
            console.log(o._getLength())
        }
        new _element2.default(document)._addEvent('move', _move)._addEvent('down', function (e) {
            o._checkLocation();
            o._updateScrollPos();
            o.posX = e._getX();
            o.posY = e._getY();
            o._add('down', o.posX, o.posY);
            var len = o._data.length;
            //如果本次'down'，上一次'move'，上上次'up'，则去掉中间的move
            if (o._data[len - 2] && o._data[len - 2][0] === 'move' && o._data[len - 3] && o._data[len - 3][0] === 'up') {
                o._delete(len - 2);
            }
            if(o._getLength() > (ieVersion < 10 ? 120 : 500)) {
                 o._emit('send');
                new _element2.default(document)._removeEvent('move',_move)
            }
            console.log(new _element2.default(document))
            o._checkLength();
        })._addEvent('up', function (e) {
            o._checkLocation();
            o._updateScrollPos();
            o.posX = e._getX();
            o.posY = e._getY();
            o._add('up', o.posX, o.posY);
            var len = o._data.length;
            //如果本次'up'，上一次'move'，上上次'down'，则去掉中间的move
            if (o._data[len - 2] && o._data[len - 2][0] === 'move' && o._data[len - 3] && o._data[len - 3][0] === 'down') {
                o._delete(len - 2);
            }
            o._checkLength();
        });
        new _element2.default(window)._addEvent('scroll', function () {
            o._checkLocation();
            var supportPageOffset = "pageXOffset" in window;
            //var isCSS1Compat = ((document.compatMode || "") === "CSS1Compat");
            var x = supportPageOffset ? window.pageXOffset : window.document.body.scrollLeft;
            var y = supportPageOffset ? window.pageYOffset : window.document.body.scrollTop;
            o.posX = x - o.scrollLeft + o.posX;
            o.posY = y - o.scrollTop + o.posY;
            o._add('scroll', x - o.scrollLeft + o.posX, y - o.scrollTop + o.posY);
            o._updateScrollPos();
            o._checkLength();
        })._addEvent('focus', function () {
            o._checkLocation();
            o._add('focus');
            o._checkLength();
        })._addEvent('blur', function () {
            o._checkLocation();
            o._add('blur');
            // if (o._hasAction()) {
            if (1) {
                console.log('emiting data as blur trigged');
                o._emit('send', 'blur');
            }
        })._addEvent('unload', function () {
            o._checkLocation();
            o._add('unload');
            if (1) {
                // if (o._hasAction()) {
                console.log('emiting data as unload trigged');
                o._emit('send', 'unload');
            }
        })._addEvent('pagehide', function () {
            o._checkLocation();
            o._add('blur');
            // if(o._hasAction()){
            if (1) {
                console.log('emiting data as pagehide trigged');
                o._emit('send', 'pagehide');
            }
        });
    },
    _updateScrollPos: function _updateScrollPos() {
        var o = this;
        var supportPageOffset = "pageXOffset" in window;
        //var isCSS1Compat = ((document.compatMode || "") === "CSS1Compat");
        var x = supportPageOffset ? window.pageXOffset : window.document.body.scrollLeft;
        var y = supportPageOffset ? window.pageYOffset : window.document.body.scrollTop;
        o.scrollLeft = x;
        o.scrollTop = y;
        return {
            x: x,
            y: y
        };
    },
    _checkLength: function _checkLength() {
        var self = this;
        if (self._getLength() > (ieVersion < 10 ? 120 : 900)) {
            self._emit('send');
        }
    },
    _checkLocation: function _checkLocation() {
        var self = this;
        if (self.shouldCheckLocation === true) {
            if (self.location !== window.location.href) {
                self._emit('send');
                self.previousLocation = self.location;
                self.location = window.location.href;
                console.log('emiting data as location changed');
            }
        }
    },
    _emit: function _emit(type, value) {
        var self = this;
        self.cb[type](value);
    },
    _hasAction: function _hasAction() {
        var data = this._data;
        /*if (data.length === 0) {
         return false
         }*/
        for (var i = 0; i < data.length; i++) {
            if ((0, _indexOf2.default)(['move', 'down', 'up', 'scroll'], data[i][0]) > -1) {
                return true;
            }
        }
        return false;
    },
    _add: function () {
        var lastX, lastY;
        var lastTime = (0, _now2.default)();
        return function (type, x, y) {
            var timestamp = (0, _now2.default)();
            var o = this;
            var data = o._data;
            if ((0, _indexOf2.default)(['move', 'down', 'up', 'scroll'], type) > -1) {
                if (type === 'move') {
                    if (x === lastX && y === lastY || lastTime === timestamp) {
                        return;
                    }
                    lastX = x;
                    lastY = y;
                    lastTime = timestamp;
                }
                data.push([type, o._overflow(x), o._overflow(y), timestamp]);
            } else {
                data.push([type, timestamp]);
            }
            return o;
        };
    }(),
    _delete: function _delete(index) {
        var o = this;
        o._data.splice(index, 1);
    },
    _diff: function _diff(track) {
        var lastX = 0,
            lastY = 0,
            lastScrollX = 0,
            lastScrollY = 0;
        var result = [];
        var o = this;
        var lastTime = o.lastTime;
        if (track.length <= 0) {
            return [];
        }
        var len = track.length;
        var i = len < this._MAX_COUNT ? 0 : len - this._MAX_COUNT;
        for (; i < len; i = i + 1) {
            var point = track[i];
            var type = point[0];
            /*if (type == 'scroll') {
             result.push([
             type,
             [point[1] - lastScrollX, point[2] - lastScrollY],
             o._overflow(lastTime ? point[3] - lastTime : 0)
             ]
             );
             lastScrollX = point[1];
             lastScrollY = point[2];
             lastTime = point[3];
               } else */
            if ((0, _indexOf2.default)(['down', 'move', 'up', 'scroll'], type) > -1) {
                result.push([type, [point[1] - lastX, point[2] - lastY], o._overflow(lastTime ? point[3] - lastTime : lastTime)]);
                lastX = point[1];
                lastY = point[2];
                lastTime = point[3];
            } else if ((0, _indexOf2.default)(['blur', 'focus', 'unload'], type) > -1) {
                result.push([type, o._overflow(lastTime ? point[1] - lastTime : lastTime)]);
                lastTime = point[1];
            }
        }
        return result;
    },
    _encode: function _encode(diff) {
        var AVAIL_STR = "()*,-./0123456789:?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~";
        // 数字转换到字符
        function bin2avail(bins) {
            var res = '';
            var len = bins.length / 6;
            for (var i = 0; i < len; i = i + 1) {
                res += AVAIL_STR.charAt(window.parseInt(bins.slice(i * 6, (i + 1) * 6), 2));
            }
            return res;
        }

        var compress = function compress(track) {
            var actions = [];
            var times = [];
            var xs = [];
            var ys = [];
            for (var i = 0, len = track.length; i < len; i = i + 1) {
                var one = track[i];
                var length = one.length;
                actions.push(one[0]);
                times.push(length === 2 ? one[1] : one[2]);
                if (length === 3) {
                    xs.push(one[1][0]);
                    ys.push(one[1][1]);
                }
            }
            var e_actions = encode_actions(actions);
            var e_dt_list = encode_intArr(times, false);
            var e_dx_list = encode_intArr(xs, true);
            var e_dy_list = encode_intArr(ys, true);
            var encode_string = e_actions + e_dt_list + e_dx_list + e_dy_list;
            var l = encode_string.length;
            if (l % 6 != 0) {
                encode_string += cbin(0, 6 - l % 6);
            }
            return bin2avail(encode_string);
        };
        var ACTION_BITS = {
            'move': 0,
            'down': 1,
            'up': 2,
            'scroll': 3,
            'focus': 4,
            'blur': 5,
            'unload': 6,
            'unknown': 7 //0b0111
        };
        var REPEAT_BIT = 8; //0b1000;
        // 数值转换为二进制数值字符，len指定长度，不足补0
        function cbin(num, len) {
            var c = num.toString(2);
            var length = c.length;
            var prefix = '';
            for (var i = length + 1; i <= len; i = i + 1) {
                prefix += '0';
            }
            c = prefix + c;
            return c;
        }

        var encode_actions = function encode_actions(actions) {
            var compress_bits = [];
            var len = actions.length;
            var i = 0;
            while (i < len) {
                var action = actions[i];
                var repeat_count = 0;
                while (true) {
                    if (repeat_count >= 1 << 4) {
                        break;
                    }
                    // 检查下一个是否相同
                    var idx = i + repeat_count + 1;
                    if (idx >= len) {
                        break;
                    }
                    var idx_action = actions[idx];
                    if (idx_action !== action) {
                        break;
                    }
                    repeat_count += 1;
                }
                i = i + 1 + repeat_count;
                var action_bit = ACTION_BITS[action];
                if (repeat_count != 0) {
                    compress_bits.push(action_bit | REPEAT_BIT);
                    compress_bits.push(repeat_count - 1);
                } else {
                    compress_bits.push(action_bit);
                }
            }
            var action_len_bin = cbin(len | 32768 /* 0b1000000000000000*/, 16);
            var action_bin = '';
            for (var j = 0, max = compress_bits.length; j < max; j = j + 1) {
                action_bin += cbin(compress_bits[j], 4);
            }
            return action_len_bin + action_bin;
        };

        function map(arr, fun) {
            var res = [];
            for (var i = 0, len = arr.length; i < len; i = i + 1) {
                res.push(fun(arr[i]));
            }
            return res;
        }

        function filter(arr, fun) {
            var res = [];
            map(arr, function (ele) {
                if (fun(ele)) {
                    res.push(ele);
                }
            });
            return res;
        }

        function encode_repeat(intArr) {
            var MAX = (1 << 15) - 1;
            intArr = map(intArr, function (ele) {
                if (ele > MAX) {
                    return MAX;
                } else if (ele < -MAX) {
                    return -MAX;
                }
                return ele;
            });
            var len = intArr.length;
            var i = 0;
            var res = [];
            while (i < len) {
                var repeat_count = 1;
                var current_int = intArr[i];
                var abs_current_int = Math.abs(current_int);
                while (true) {
                    if (i + repeat_count >= len) {
                        break;
                    }
                    if (intArr[i + repeat_count] !== current_int) {
                        break;
                    }
                    if (abs_current_int >= 127 /*(1 << 7) - 1)*/ || repeat_count >= 127 /*(1 >> 7) - 1)*/) {
                        // 只对绝对值小于(1 << 7) - 1的数值进行压缩
                        break;
                    }
                    repeat_count += 1;
                }
                if (repeat_count > 1) {
                    // 1(重复标志)1(符号标志)0001111(重复次数)0000111(原始数值的绝对值)
                    res.push((current_int < 0 ? 49152 /*0b1100000000000000*/ : 32768 /*0b1000000000000000*/) | repeat_count << 7 | abs_current_int);
                } else {
                    res.push(current_int);
                }
                i += repeat_count;
            }
            return res;
        }

        function logxy(x, y) {
            if (x === 0) {
                return 0;
            }
            return Math.log(x) / Math.log(y);
        }

        function encode_intArr(intArr, with_sign) {
            intArr = encode_repeat(intArr);
            var ws = [],
                ns = [],
                sign_bin;
            map(intArr, function (dt) {
                // 计算数值所用的位数
                var w = Math.ceil(logxy(Math.abs(dt) + 1, 16));
                if (w === 0) {
                    w = 1;
                }
                ws.push(cbin(w - 1, 2));
                ns.push(cbin(Math.abs(dt), w * 4));
            });
            var ws_bin = ws.join('');
            var ns_bin = ns.join('');
            if (!with_sign) {
                sign_bin = '';
            } else {
                sign_bin = map(filter(intArr, function (v) {
                    return v != 0 && v >> 15 != 1;
                }), function (v) {
                    return v < 0 ? '1' : '0';
                }).join('');
            }
            var split_bin = cbin(intArr.length | 32768 /*0b1000000000000000*/, 16);
            return split_bin + ws_bin + ns_bin + sign_bin;
        }

        return compress(diff);
    },
    _overflow: function _overflow(num) {
        var MAX = (1 << 15) - 1;
        if (typeof num !== 'number') {
            return num;
        } else if (num > MAX) {
            num = MAX;
        } else if (num < -MAX) {
            num = -MAX;
        }
        return Math.round(num);
    },
    _getLength: function _getLength() {
        var o = this;
        return o._encode(o._diff(o._data)).length;
    },
    _getData: function _getData() {
        var self = this;
        var firstActTimeStamp;
        if (self._data.length === 0) {
            return ['', '', ''];
        }
        var firstData = self._data[0];
        var lastData = self._data[self._data.length - 1];
        if ((0, _indexOf2.default)(['down', 'move', 'up', 'scroll'], firstData[0]) > -1) {
            firstActTimeStamp = firstData[3];
        } else {
            firstActTimeStamp = firstData[1];
        }
        var realData = self._diff(self._data);
        var data = self._encode(realData);
        if ((0, _indexOf2.default)(['down', 'move', 'up', 'scroll'], lastData[0]) > -1) {
            self.lastTime = lastData[3];
        } else {
            self.lastTime = lastData[1];
        }
        //清空;
        self._data = [];
        return [data, realData, firstActTimeStamp];
    }
};
var track = new Track();
exports.track = track;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(22),
    binaryIndex = __webpack_require__(24);

/* Native method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Gets the index at which the first occurrence of `value` is found in `array`
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
 * for equality comparisons. If `fromIndex` is negative, it's used as the offset
 * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`
 * performs a faster binary search.
 *
 * @static
 * @memberOf _
 * @category Array
 * @param {Array} array The array to search.
 * @param {*} value The value to search for.
 * @param {boolean|number} [fromIndex=0] The index to search from or `true`
 *  to perform a binary search on a sorted array.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.indexOf([1, 2, 1, 2], 2);
 * // => 1
 *
 * // using `fromIndex`
 * _.indexOf([1, 2, 1, 2], 2, 2);
 * // => 3
 *
 * // performing a binary search
 * _.indexOf([1, 1, 2, 2], 2, true);
 * // => 2
 */
function indexOf(array, value, fromIndex) {
  var length = array ? array.length : 0;
  if (!length) {
    return -1;
  }
  if (typeof fromIndex == 'number') {
    fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;
  } else if (fromIndex) {
    var index = binaryIndex(array, value);
    if (index < length &&
        (value === value ? (value === array[index]) : (array[index] !== array[index]))) {
      return index;
    }
    return -1;
  }
  return baseIndexOf(array, value, fromIndex || 0);
}

module.exports = indexOf;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(6),
    isLength = __webpack_require__(1),
    isObjectLike = __webpack_require__(3);

/** `Object#toString` result references. */
var arrayTag = '[object Array]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/* Native method references for those with the same name as other `lodash` methods. */
var nativeIsArray = getNative(Array, 'isArray');

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(function() { return arguments; }());
 * // => false
 */
var isArray = nativeIsArray || function(value) {
  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
};

module.exports = isArray;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// @flow
/**
 * Created by qiankn on 2017/7/31.
 */
// 以下算法是对原生JSON对象的stringify方法的模仿（Polyfill）
var stringify = window.JSON ? window.JSON.stringify : function () {
    var toString = Object.prototype.toString;
    var isArray = Array.isArray || function (a) {
        return toString.call(a) === '[object Array]';
    };
    var escMap = { '"': '\\"', '\\': '\\\\', '\b': '\\b', '\f': '\\f', '\n': '\\n', '\r': '\\r', '\t': '\\t' };
    var escFunc = function escFunc(m) {
        return escMap[m] || '\\u' + (m.charCodeAt(0) + 0x10000).toString(16).substr(1);
    };
    var escRE = /[\\"\u0000-\u001F\u2028\u2029]/g;
    return function stringify(value) {
        if (value == null) {
            return 'null';
        } else if (typeof value === 'number') {
            return isFinite(value) ? value.toString() : 'null';
        } else if (typeof value === 'boolean') {
            return value.toString();
        } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
            if (typeof value.toJSON === 'function') {
                return stringify(value.toJSON());
            } else if (isArray(value)) {
                var res = '[';
                if (value.length || value.length === 0) {
                    for (var i = 0; i < value.length; i++) {
                        res += (i ? ', ' : '') + stringify(value[i]);
                    }
                }
                return res + ']';
            } else if (toString.call(value) === '[object Object]') {
                var tmp = [];
                for (var k in value) {
                    if (value.hasOwnProperty(k)) tmp.push(stringify(k) + ': ' + stringify(value[k]));
                }
                return '{' + tmp.join(', ') + '}';
            }
        }
        return '"' + value.toString().replace(escRE, escFunc) + '"';
    };
}();
module.exports = stringify;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(2);

/** `Object#toString` result references. */
var funcTag = '[object Function]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 which returns 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

module.exports = isFunction;


/***/ }),
/* 12 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument provided to it.
 *
 * @static
 * @memberOf _
 * @category Utility
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'user': 'fred' };
 *
 * _.identity(object) === object;
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(26),
    baseEach = __webpack_require__(27),
    createForEach = __webpack_require__(36);

/**
 * Iterates over elements of `collection` invoking `iteratee` for each element.
 * The `iteratee` is bound to `thisArg` and invoked with three arguments:
 * (value, index|key, collection). Iteratee functions may exit iteration early
 * by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length" property
 * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
 * may be used for object iteration.
 *
 * @static
 * @memberOf _
 * @alias each
 * @category Collection
 * @param {Array|Object|string} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [thisArg] The `this` binding of `iteratee`.
 * @returns {Array|Object|string} Returns `collection`.
 * @example
 *
 * _([1, 2]).forEach(function(n) {
 *   console.log(n);
 * }).value();
 * // => logs each value from left to right and returns the array
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {
 *   console.log(n, key);
 * });
 * // => logs each value-key pair and returns the object (iteration order is not guaranteed)
 */
var forEach = createForEach(arrayEach, baseEach);

module.exports = forEach;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(2);

/**
 * Converts `value` to an object if it's not one.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {Object} Returns the object.
 */
function toObject(value) {
  return isObject(value) ? value : Object(value);
}

module.exports = toObject;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var getLength = __webpack_require__(16),
    isLength = __webpack_require__(1);

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

module.exports = isArrayLike;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(32);

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

module.exports = getLength;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(15),
    isObjectLike = __webpack_require__(3);

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Native method references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is classified as an `arguments` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  return isObjectLike(value) && isArrayLike(value) &&
    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
}

module.exports = isArguments;


/***/ }),
/* 18 */
/***/ (function(module, exports) {

/** Used to detect unsigned integer values. */
var reIsUint = /^\d+$/;

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _Geeguard = __webpack_require__(20);

var _Geeguard2 = _interopRequireDefault(_Geeguard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _Geeguard2.default)('b46d1900d0a894591916ea94ea91bd2c', window.__geeguard.server, 'node_sdk_test2'); //shim垫片需要在sham前面
/*require('es5-shim/es5-shim');
require('es5-shim/es5-sham');*/

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _now = __webpack_require__(0);

var _now2 = _interopRequireDefault(_now);

var _track = __webpack_require__(7);

var _proxyLink = __webpack_require__(39);

var _proxyLink2 = _interopRequireDefault(_proxyLink);

var _manageData = __webpack_require__(40);

var _stringify = __webpack_require__(10);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var server; // @flow
/**
 * @constructor
 */

var isPatched = false;
function patchGeeguard(gt_id /* : string */, _server /* : string */, geeguard_uuid /* : string */) {
    if (!(gt_id && _server && geeguard_uuid) || !window.Geeguard || isPatched) {
        return;
    }
    var protocol;
    if (window.location.protocol === 'http:' || window.location.protocol === 'https:') {
        protocol = window.location.protocol;
    } else {
        protocol = 'https:';
    }
    isPatched = true;

    _manageData.envData.gt_id = gt_id;
    //envData.cookie = geeguard_uuid;
    _manageData.envData.uuid = geeguard_uuid;
    _manageData.envData.page_time_stamp = (0, _now2.default)();
    _manageData.envData.page_id = _manageData.envData.page_time_stamp + '_' + Math.random();
    console.log(window.geeguard.config);
    _manageData.envData.config = window.geeguard.config;

    if (window.localStorage) {
        var storage = window.localStorage;
        if (storage.getItem('geeguard_uuid')) {
            _manageData.envData.uuid = storage.getItem('geeguard_uuid');
        } else {
            storage.setItem('geeguard_uuid', _manageData.envData.uuid);
        }
    }
    console.log(protocol);
    console.log(_server);
    server = protocol + '//' + _server;

    _track.track.cb['send'] = function (type) {
        (0, _manageData.sendData)({
            server: server,
            type: type
        });
    };
    (0, _proxyLink2.default)(_manageData.envData.page_id);
    window.Geeguard.prototype.getData = function (isShort) {
        (0, _manageData.getData)(isShort);
        var data = (0, _manageData.preprocess)({
            is_event_trigger: true
        });
        return (0, _stringify2.default)(data);
    };
    //加载成功则发送一次
    (0, _manageData.sendData)({
        server: server
    });
}

exports.default = patchGeeguard;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(11),
    isObjectLike = __webpack_require__(3);

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && reIsHostCtor.test(value);
}

module.exports = isNative;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var indexOfNaN = __webpack_require__(23);

/**
 * The base implementation of `_.indexOf` without support for binary searches.
 *
 * @private
 * @param {Array} array The array to search.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  if (value !== value) {
    return indexOfNaN(array, fromIndex);
  }
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = baseIndexOf;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

/**
 * Gets the index at which the first occurrence of `NaN` is found in `array`.
 *
 * @private
 * @param {Array} array The array to search.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
 */
function indexOfNaN(array, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 0 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    var other = array[index];
    if (other !== other) {
      return index;
    }
  }
  return -1;
}

module.exports = indexOfNaN;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var binaryIndexBy = __webpack_require__(25),
    identity = __webpack_require__(12);

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

/**
 * Performs a binary search of `array` to determine the index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function binaryIndex(array, value, retHighest) {
  var low = 0,
      high = array ? array.length : low;

  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = (low + high) >>> 1,
          computed = array[mid];

      if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return binaryIndexBy(array, value, identity, retHighest);
}

module.exports = binaryIndex;


/***/ }),
/* 25 */
/***/ (function(module, exports) {

/* Native method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor,
    nativeMin = Math.min;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;

/**
 * This function is like `binaryIndex` except that it invokes `iteratee` for
 * `value` and each element of `array` to compute their sort ranking. The
 * iteratee is invoked with one argument; (value).
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function binaryIndexBy(array, value, iteratee, retHighest) {
  value = iteratee(value);

  var low = 0,
      high = array ? array.length : 0,
      valIsNaN = value !== value,
      valIsNull = value === null,
      valIsUndef = value === undefined;

  while (low < high) {
    var mid = nativeFloor((low + high) / 2),
        computed = iteratee(array[mid]),
        isDef = computed !== undefined,
        isReflexive = computed === computed;

    if (valIsNaN) {
      var setLow = isReflexive || retHighest;
    } else if (valIsNull) {
      setLow = isReflexive && isDef && (retHighest || computed != null);
    } else if (valIsUndef) {
      setLow = isReflexive && (retHighest || isDef);
    } else if (computed == null) {
      setLow = false;
    } else {
      setLow = retHighest ? (computed <= value) : (computed < value);
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin(high, MAX_ARRAY_INDEX);
}

module.exports = binaryIndexBy;


/***/ }),
/* 26 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for callback
 * shorthands and `this` binding.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(28),
    createBaseEach = __webpack_require__(35);

/**
 * The base implementation of `_.forEach` without support for callback
 * shorthands and `this` binding.
 *
 * @private
 * @param {Array|Object|string} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object|string} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(29),
    keys = __webpack_require__(31);

/**
 * The base implementation of `_.forOwn` without support for callback
 * shorthands and `this` binding.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(30);

/**
 * The base implementation of `baseForIn` and `baseForOwn` which iterates
 * over `object` properties returned by `keysFunc` invoking `iteratee` for
 * each property. Iteratee functions may exit iteration early by explicitly
 * returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(14);

/**
 * Creates a base function for `_.forIn` or `_.forInRight`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var iterable = toObject(object),
        props = keysFunc(object),
        length = props.length,
        index = fromRight ? length : -1;

    while ((fromRight ? index-- : ++index < length)) {
      var key = props[index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(6),
    isArrayLike = __webpack_require__(15),
    isObject = __webpack_require__(2),
    shimKeys = __webpack_require__(33);

/* Native method references for those with the same name as other `lodash` methods. */
var nativeKeys = getNative(Object, 'keys');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
var keys = !nativeKeys ? shimKeys : function(object) {
  var Ctor = object == null ? undefined : object.constructor;
  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
      (typeof object != 'function' && isArrayLike(object))) {
    return shimKeys(object);
  }
  return isObject(object) ? nativeKeys(object) : [];
};

module.exports = keys;


/***/ }),
/* 32 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var isArguments = __webpack_require__(17),
    isArray = __webpack_require__(9),
    isIndex = __webpack_require__(18),
    isLength = __webpack_require__(1),
    keysIn = __webpack_require__(34);

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A fallback implementation of `Object.keys` which creates an array of the
 * own enumerable property names of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function shimKeys(object) {
  var props = keysIn(object),
      propsLength = props.length,
      length = propsLength && object.length;

  var allowIndexes = !!length && isLength(length) &&
    (isArray(object) || isArguments(object));

  var index = -1,
      result = [];

  while (++index < propsLength) {
    var key = props[index];
    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = shimKeys;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var isArguments = __webpack_require__(17),
    isArray = __webpack_require__(9),
    isIndex = __webpack_require__(18),
    isLength = __webpack_require__(1),
    isObject = __webpack_require__(2);

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  if (object == null) {
    return [];
  }
  if (!isObject(object)) {
    object = Object(object);
  }
  var length = object.length;
  length = (length && isLength(length) &&
    (isArray(object) || isArguments(object)) && length) || 0;

  var Ctor = object.constructor,
      index = -1,
      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
      result = Array(length),
      skipIndexes = length > 0;

  while (++index < length) {
    result[index] = (index + '');
  }
  for (var key in object) {
    if (!(skipIndexes && isIndex(key, length)) &&
        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = keysIn;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var getLength = __webpack_require__(16),
    isLength = __webpack_require__(1),
    toObject = __webpack_require__(14);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    var length = collection ? getLength(collection) : 0;
    if (!isLength(length)) {
      return eachFunc(collection, iteratee);
    }
    var index = fromRight ? length : -1,
        iterable = toObject(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

var bindCallback = __webpack_require__(37),
    isArray = __webpack_require__(9);

/**
 * Creates a function for `_.forEach` or `_.forEachRight`.
 *
 * @private
 * @param {Function} arrayFunc The function to iterate over an array.
 * @param {Function} eachFunc The function to iterate over a collection.
 * @returns {Function} Returns the new each function.
 */
function createForEach(arrayFunc, eachFunc) {
  return function(collection, iteratee, thisArg) {
    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))
      ? arrayFunc(collection, iteratee)
      : eachFunc(collection, bindCallback(iteratee, thisArg, 3));
  };
}

module.exports = createForEach;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(12);

/**
 * A specialized version of `baseCallback` which only supports `this` binding
 * and specifying the number of arguments to provide to `func`.
 *
 * @private
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {number} [argCount] The number of arguments to provide to `func`.
 * @returns {Function} Returns the callback.
 */
function bindCallback(func, thisArg, argCount) {
  if (typeof func != 'function') {
    return identity;
  }
  if (thisArg === undefined) {
    return func;
  }
  switch (argCount) {
    case 1: return function(value) {
      return func.call(thisArg, value);
    };
    case 3: return function(value, index, collection) {
      return func.call(thisArg, value, index, collection);
    };
    case 4: return function(accumulator, value, index, collection) {
      return func.call(thisArg, accumulator, value, index, collection);
    };
    case 5: return function(value, other, key, object, source) {
      return func.call(thisArg, value, other, key, object, source);
    };
  }
  return function() {
    return func.apply(thisArg, arguments);
  };
}

module.exports = bindCallback;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var isObjectLike = __webpack_require__(3);

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
 * as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isNumber(8.4);
 * // => true
 *
 * _.isNumber(NaN);
 * // => true
 *
 * _.isNumber('8.4');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);
}

module.exports = isNumber;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _element = __webpack_require__(4);

var _element2 = _interopRequireDefault(_element);

var _envConstants = __webpack_require__(5);

var _track = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function appendTimestampToReferrer(timestamp_segment, isOpenInNew) {
    _track.track.shouldCheckLocation = false;
    var root = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
    var origin = window.location.origin ? window.location.origin : root;
    var pathname = window.location.pathname;
    var search = window.location.search;
    var hash = window.location.hash;
    var currentState;
    var correctSearch;
    var startSeg = search.indexOf("?") > -1 ? "&" : "?";
    var newState;
    var newSearch;
    if (search.indexOf('ggd_previous_page_time_stamp=') > -1) {

        newSearch = search.replace(/(ggd_previous_hash)=[^&]+&?/, '');
        newSearch = newSearch.replace(/(ggd_previous_page_time_stamp)=[^&]+&?/, timestamp_segment);
        if (hash) {
            newSearch = newSearch + '&ggd_previous_hash=' + hash.split('#')[1];
        }

        correctSearch = search.replace(/ggd_previous_page_time_stamp=[^&]+&?/, "");
        correctSearch = correctSearch.replace(/ggd_previous_hash=[^&]+&?/, "");

        currentState = origin + pathname + correctSearch + hash;
        newState = origin + pathname + newSearch;
    } else {
        if (hash) {
            newSearch = search + startSeg + timestamp_segment + '&ggd_previous_hash=' + hash.split('#')[1];
        } else {
            newSearch = search + startSeg + timestamp_segment;
        }
        currentState = origin + pathname + search + hash;
        newState = origin + pathname + newSearch;
    }
    window.history.replaceState(window.history.state, document.title, newState);
    console.log('history is replaced to ' + newState);
    if (isOpenInNew && !_envConstants.isMobile) {
        setTimeout(function () {
            console.log('history is back to ' + currentState);
            window.history.replaceState(window.history.state, document.title, currentState);
            _track.track.shouldCheckLocation = true;
        }, 100);
    }
    return true;
} // @flow
/**
 * Created by qiankn on 2017/7/31.
 */


function proxyLink(page_time_stamp /* :number */) {

    if (window.ggd_is_proxy_linked) {
        console.log('links have been proxy');
        return false;
    }
    if (window.history && window.history.replaceState) {
        new _element2.default(document)._addEvent('click', function (event) {
            var e = event._e;
            var ev = e || window.event;
            var target;
            if (ev.target) {
                target = ev.target;
            } else if (ev.srcElement) {
                target = ev.srcElement;
            }
            var traversal = function traversal(ele) {
                if (ele && (ele.tagName === 'A' || ele.tagName === 'a') && ele.href && ele.href.indexOf("?#") === -1 && //单页应用不代理
                ele.href.indexOf('javascript:') === -1 && //死链接不代理
                ele.href.replace(window.location.origin + window.location.pathname, "").indexOf("#") !== 0) //锚点不代理
                    {
                        var isOpenInNew = ele.target && ele.target !== '_self';
                        try {
                            appendTimestampToReferrer("ggd_previous_page_time_stamp=" + page_time_stamp, isOpenInNew);
                        } catch (err) {
                            console.log('replaceState failed, error:' + err);
                        }
                        //window.location=ele.href;
                    } else if (!ele || ele === document || ele === document.documentElement || ele === document.body) {
                    return;
                }
                if (ele && ele.parentNode) {
                    traversal(ele.parentNode);
                }
            };
            traversal(target);
        });
        var originOpen = window.open;
        window.open = function (URL, name, features, replace) {
            try {
                appendTimestampToReferrer("ggd_previous_page_time_stamp=" + page_time_stamp, true);
            } catch (err) {}
            originOpen(URL, name, features, replace);
        };
    } else {
        console.log('history object not supported');
    }
    window.ggd_is_proxy_linked = true;
}

exports.default = proxyLink;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.envData = exports.getData = exports.preprocess = exports.sendData = undefined;

var _ajax = __webpack_require__(41);

var _now = __webpack_require__(0);

var _now2 = _interopRequireDefault(_now);

var _simHash = __webpack_require__(42);

var _simHash2 = _interopRequireDefault(_simHash);

var _track = __webpack_require__(7);

var _insight = __webpack_require__(43);

var _click = __webpack_require__(45);

var _path = __webpack_require__(46);

var _envConstants = __webpack_require__(5);

var _getStack = __webpack_require__(47);

var _getStack2 = _interopRequireDefault(_getStack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*::
 type envDataType = {
 page_time_stamp: number,
 uuid: string,
 cookie: string
 }
 */
/*::
 type processDataType = {
 is_event_trigger: boolean,
 gt_id: string,
 error_data ? : any[]
 }
 */
/*::
 type sendOptionsType = {
 server: string,
 type ? : string,
 id: string,
 emptyForce ? : any,
 isEventTrigger ? : any
 }
 */
/*::
 type basicData = {
 page_time_stamp: number,
 uuid: string,
 cookie: string,
 is_event_trigger: boolean,
 gt_id: string,
 error_data ? : any[],
 track: any,
 insight: any,
 click: any,
 path: any,
 page_fingerprint: string,
 previous: string,
 location: string,
 request_time_stamp: number,
 first_act_time_stamp: any,
 appId: string
 }
 */

var segs = document.documentElement ? document.documentElement.outerHTML.replace(/</g, ' ').replace(/>/g, ' ').split(' ') : ''; // @flow

var pageSimHash = (0, _simHash2.default)(segs);

var trackData;
var insightData;
var clickData;
var pathData;

//var error_data = []

var envData = {
    page_time_stamp: '',
    page_id: '',
    uuid: '',
    //cookie: '',
    gt_id: '',
    config: '',
    ep: {
        e: _getStack2.default
    }

    //对数据进行加工，添加字段返回一个不带错误缓存的数据对象
};function preprocess(options) /* : basicData */{
    /*var isEventTrigger
    if (!options) {
        isEventTrigger = false
    }
    else if (options.is_event_trigger) {
        isEventTrigger = true
    }*/
    var basicData = {
        platform: 'web',
        appId: window.__geeguardAppId ? window.__geeguardAppId : ''
    };

    basicData.track = trackData[0];
    basicData.insight = insightData;
    basicData.click = clickData;
    basicData.path = pathData;
    basicData.page_fingerprint = pageSimHash;
    basicData.previous = document.referrer;
    basicData.location = _track.track.location;
    basicData.previous_location = _track.track.previousLocation;
    //basicData.request_time_stamp = now()
    basicData.first_act_time_stamp = trackData[2];

    for (var propE in envData) {
        basicData[propE] = envData[propE];
    }
    /*
         for (var propT in options) {
         basicData[propT] = options[propT]
         } */
    /*
        basicData.page_time_stamp = envData.page_time_stamp;
        basicData.uuid = envData.uuid;
        basicData.cookie = envData.cookie;*/

    /*    basicData.is_event_trigger = options.is_event_trigger;
        basicData.gt_id = options.gt_id;*/
    /*if (envData.error_data) {
        basicData.error_data = envData.error_data
    }*/

    if (true) {
        basicData.realTrack = trackData[1];
    }
    return basicData;
}

//获取并清空实例中的数据，存入闭包变量
function getData(isShort, noInsight) {
    //如果是事件触发，则insight必须返回全数据
    if (!noInsight) {
        insightData = _insight.insight._getData(isShort);
    }
    trackData = _track.track._getData();
    clickData = _click.click._getData();
    pathData = _path.path._getData();
}

function sendData(options /* : sendOptionsType */, callback /*:: ?: Function */) {
    var type = options.type || 'other';
    var noInsight = false;
    if (type === 'blur' || type === 'unload' || _track.track === 'pagehide') {
        noInsight = true;
    }

    getData(true, noInsight);
    var data = preprocess();

    //var error_data_copy = error_data.slice()

    //var fullData = preprocess()
    //fullData.error_data = error_data_copy

    function errorHandler() {
        if (callback) {
            callback();
        }
        //error_data.push(data)
    }

    function successHanlder() {
        if (callback) {
            callback();
        }
        //回调执行时，有可能下个请求已经响应过
        /*var errorDataLength = error_data.length
        var errorDataCopyLength = error_data_copy.length
        if (errorDataCopyLength === errorDataLength) {
            error_data = []
        } else if (errorDataCopyLength < errorDataLength) {
            error_data = error_data.slice(errorDataCopyLength)
        }*/
    }
    var ajaxOptions = {
        url: options.server + '/fullpage.php',
        data: data,
        success: successHanlder,
        error: errorHandler
        // if (type === 'unload' || (type === 'blur' && isMobile)) {
    };if (type === 'unload' || type === 'pagehide') {
        console.log(ajaxOptions.data)
        _ajax.$._hacksend(ajaxOptions);
        return;
    }
    //ie10以下使用jsonp
    if (_envConstants.ieVersion < 10) {
        _ajax.$._jsonp(ajaxOptions);
    } else {
        _ajax.$._post(ajaxOptions);
    }
}

/*module.exports = {
    sendData: sendData,
    preprocess: preprocess,
    getData: getData,
    envData: envData
}*/
exports.sendData = sendData;
exports.preprocess = preprocess;
exports.getData = getData;
exports.envData = envData;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.$ = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; // @flow


var _now = __webpack_require__(0);

var _now2 = _interopRequireDefault(_now);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var stringify = __webpack_require__(10);
function formatParams(url, data) {
    var propArr = [];
    for (var prop in data) {
        var value = data[prop];
        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
            value = stringify(value);
        }
        propArr.push('' + encodeURIComponent(prop) + '=' + encodeURIComponent(value));
    }
    var query = propArr.join('&');
    if (url.indexOf('?') > -1) {
        query = '&' + query;
    } else {
        query = '?' + query;
    }
    return query;
}
var $ = exports.$ = {
    _canAjax: function _canAjax() {
        return (window.XDomainRequest || window.XMLHttpRequest && 'withCredentials' in new window.XMLHttpRequest()) && window.JSON;
    },
    _post: function _post(options) {
        var url = options.url;
        var data = options.data;
        var successCallback = options.success;
        var errorCallback = options.error;
        var body = window.JSON.stringify(data);
        //var body = data;
        if (window.XMLHttpRequest && !('withCredentials' in new window.XMLHttpRequest())) {
            var protocol = window.location.protocol;
            var xdr = new window.XDomainRequest();
            // XDomainRequest 要求跨域的协议与页面一致
            if (url.indexOf(protocol) === -1) {
                url = url.replace(/^https?:/, protocol);
            }
            xdr.open('POST', url);
            xdr.ontimeout = function () {
                if (errorCallback) {
                    errorCallback();
                }
            };
            xdr.onerror = function () {
                if (successCallback) {
                    successCallback({
                        msg: 'error'
                    });
                }
            };
            xdr.onload = function () {
                if (successCallback) {}
                successCallback(window.JSON.parse(xdr.responseText));
            };
            xdr.send(body);
        } else if (window.XMLHttpRequest) {
            var xhr = new window.XMLHttpRequest();
            xhr.open('POST', url, true);
            xhr.setRequestHeader('Content-Type', 'text/plain;charset=utf-8');
            //xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
            xhr.setRequestHeader('Accept', 'application/json');
            xhr.withCredentials = true; // 允许带上 cookie，IE10+ 有效
            //去掉，与onreadystatechange重复
            /*xhr.onload = function () {
                if(cb){
                    cb(xhr.responseText && window.JSON.parse(xhr.responseText));
                }
            };*/
            xhr.onerror = function () {
                if (errorCallback) {
                    errorCallback(xhr.responseText && window.JSON.parse(xhr.responseText));
                }
            };
            xhr.ontimeout = function () {
                if (errorCallback) {
                    errorCallback(xhr.responseText && window.JSON.parse(xhr.responseText));
                }
            };
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && successCallback) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        successCallback(xhr.responseText && window.JSON.parse(xhr.responseText));
                    } else {
                        //cb({msg: 'status: ' + xhr.status});
                    }
                }
            };
            xhr.send(body);
        }
    },
    _get: function _get(options) {
        var url = options.url;
        var cb = options.success;
        var errorCallback = options.error;
        var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
        xhr.open('GET', url);
        xhr.onerror = function () {
            if (errorCallback) {
                errorCallback(xhr.responseText && window.JSON.parse(xhr.responseText));
            }
        };
        xhr.onreadystatechange = function () {
            if (xhr.readyState > 3 && xhr.status === 200) {
                cb(window.JSON.parse(xhr.responseText));
            }
        };
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        xhr.send();
        return xhr;
    },
    _jsonp: function _jsonp(options) {
        options = options || {};
        if (!options.url) {
            throw new Error("参数不合法");
        }
        var timer;
        //创建 script 标签并加入到页面中
        var callbackName = 'geeguard_' + (0, _now2.default)();
        var head = document.getElementsByTagName('head')[0];
        var params = "";
        var callbackKey = options.callback || 'cb';
        if (options.data) {
            options.data[callbackKey] = callbackName;
            params += formatParams(options.url, options.data);
        } else {
            params += callbackKey + "=" + callbackName;
        }
        var script = document.createElement('script');
        head.appendChild(script);
        //创建jsonp回调函数
        window[callbackName] = function (json) {
            head.removeChild(script);
            clearTimeout(timer);
            window[callbackName] = null;
            options.success && options.success(json);
        };
        script.onerror = function (json) {
            head.removeChild(script);
            clearTimeout(timer);
            window[callbackName] = null;
            options.error && options.error(json);
        };
        //发送请求
        console.log(script);
        console.log(options.url + params);
        console.log('script.src.length:' + (options.url + params).length);
        script.src = options.url + params;
        // script.src = options.url + '?page_time_stamp=88888';
        //超时处理
        if (options.time) {
            timer = setTimeout(function () {
                window[callbackName] = null;
                head.removeChild(script);
                options.fail && options.fail({
                    message: "超时"
                });
            }, options.time);
        }
    },
    //关闭浏览器时使用的发送方式
    _hacksend: function _hacksend(options) {
        var successCallback = options.success;
        var errorCallback = options.error;
        var img = document.createElement('img');
        var url = options.url + formatParams(options.url, options.data);
        img.src = url;
        img.onerror = function () {
            if (errorCallback) {
                errorCallback();
            }
        };
        /*img.onload =function () {
            if (successCallback) {
                successCallback();
            }
        }*/
    }
};

// module.exports = ajax;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
// @flow
var _ggdHashCode = function _ggdHashCode(str) {
    var hash = 0,
        i,
        chr,
        len;
    if (str.length === 0) return hash;
    for (i = 0, len = str.length; i < len; i++) {
        chr = str.charCodeAt(i);
        hash = (hash << 5) - hash + chr;
        hash |= 0; // Convert to 32bit integer
    }
    return hash;
};
function simhash(tokens) {
    var hashbits = 128;
    var hash, j, bitmask;
    var v = [];
    var r = [];
    for (var i = 0; i < hashbits; i++) {
        v.push(0);
        r.push(0);
    }
    for (i = 0; i < tokens.length; i++) {
        hash = _ggdHashCode(tokens[i]);
        if (hash == 0) {
            continue;
        }
        for (j = 0; j < hashbits; j++) {
            bitmask = 1 << j;
            if (hash & bitmask) {
                v[j] += 1;
            } else {
                v[j] -= 1;
            }
        }
    }
    for (j = 0; j < hashbits; j++) {
        if (v[j] >= 0) {
            r[j] = 1;
        }
    }
    return r.join(""); //fingerprint
}
function bin2alpha(bins) {
    var ks = [];
    for (var i = 0; i < bins.length / 4; i++) {
        ks.push(String.fromCharCode(parseInt(bins.slice(i, i + 4), 2) + 65));
    }
    return ks.join("");
}

var simHash = function simHash(segs) {
    return bin2alpha(simhash(segs));
};
exports.default = simHash;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.insight = undefined;

var _indexOf = __webpack_require__(8);

var _indexOf2 = _interopRequireDefault(_indexOf);

var _forEach = __webpack_require__(13);

var _forEach2 = _interopRequireDefault(_forEach);

var _now = __webpack_require__(0);

var _now2 = _interopRequireDefault(_now);

var _md = __webpack_require__(44);

var _md2 = _interopRequireDefault(_md);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @flow
/**
 * @constructor
 */
var stringify = __webpack_require__(10);
/*if (process.env.TEST) {
    now = function () {
        return 1502097557445;
    }
}*/
function Insight() {
    var o = this;
    o._staticData = {};
}
Insight.prototype = {
    _UNKNOWN: -1,
    _TRUE: 1,
    _FALSE: 0,
    _bool2num: function _bool2num(b) {
        var o = this;
        return b ? o._TRUE : o._FALSE;
    },
    _isUndefined: function _isUndefined(value) {
        return typeof value === 'undefined';
    },
    _tagKeys: ["A", "ARTICLE", "ASIDE", "AUDIO", "BASE", "BUTTON", "CANVAS", "CODE", "IFRAME", "IMG", "INPUT", "LABEL", "LINK", "NAV", "OBJECT", "OL", "PICTURE", "PRE", "SECTION", "SELECT", "SOURCE", "SPAN", "STYLE", "TABLE", "TEXTAREA", "VIDEO"],
    _getKeys: function _getKeys() {
        // 注意顺序
        return ['textLength', 'HTMLLength', 'documentMode'].concat(this._tagKeys).concat(['screenLeft', 'screenTop', 'screenAvailLeft', 'screenAvailTop', 'innerWidth', 'innerHeight', 'outerWidth', 'outerHeight', 'browserLanguage', 'browserLanguages', 'systemLanguage', 'devicePixelRatio', 'colorDepth', 'userAgent', 'cookieEnabled', 'netEnabled', 'screenWidth', 'screenHeight', 'screenAvailWidth', 'screenAvailHeight', 'localStorageEnabled', 'sessionStorageEnabled', 'indexedDBEnabled', 'CPUClass', 'platform', 'doNotTrack', 'timezone', 'canvas2DFP', 'canvas3DFP', 'plugins', 'maxTouchPoints', 'flashEnabled', 'javaEnabled', 'hardwareConcurrency', 'jsFonts', 'timestamp', 'performanceTiming']);
    },
    _getStaticData: function _getStaticData() {
        var Win = window;
        var Screen = Win.screen;
        var Doc = Win.document;
        var Nav = Win.navigator;
        var DocEle = Doc.documentElement;
        var Body = Doc.body;
        var ELEMENT_NODE = Body.nodeType;
        var o = this;
        var data = {};
        // 标签统计
        var traverse = function traverse(node) {
            if (!node) {
                return;
            }
            var nodeType = node.nodeType;
            var nodeName = node.nodeName.toUpperCase();
            if (nodeType === ELEMENT_NODE) {
                if ((0, _indexOf2.default)(o._tagKeys, nodeName) > -1) {
                    if (data[nodeName]) {
                        data[nodeName] += 1;
                    } else {
                        data[nodeName] = 1;
                    }
                }
            }
            var childNodes = node.childNodes;
            for (var i = 0, max = childNodes.length; i < max; i = i + 1) {
                traverse(childNodes[i]);
            }
        };
        traverse(Doc);
        // 页面文字长度
        var text = DocEle.textContent || DocEle.innerText;
        data.textLength = text.length;
        // 页面源代码长度
        var html = DocEle.innerHTML;
        data.HTMLLength = html.length;
        // 渲染模式
        data.documentMode = Doc.documentMode || Doc.compatMode;
        // 浏览器语言
        data.browserLanguage = Nav.language || Nav.userLanguage;
        // 浏览器可用语言
        data.browserLanguages = Nav.languages && Nav.languages.join(',');
        // 操作系统语言
        data.systemLanguage = Win.systemLanguage;
        // 显示器像素密度
        data.devicePixelRatio = Win.devicePixelRatio;
        // 颜色深度
        data.colorDepth = Screen.colorDepth;
        // user angent
        data.userAgent = Nav.userAgent;
        // 是否允许使用cookie
        data.cookieEnabled = o._bool2num(Nav.cookieEnabled);
        // 网络是否正常
        data.netEnabled = o._bool2num(Nav.onLine);
        // 浏览器页面窗口宽高
        data.innerWidth = Win.innerWidth;
        data.innerHeight = Win.innerHeight;
        // 整个浏览器宽高
        data.outerWidth = Win.outerWidth;
        data.outerHeight = Win.outerHeight;
        // 显示器的宽高
        data.screenWidth = Screen.width;
        data.screenHeight = Screen.height;
        // 浏览器可用的显示器宽高
        data.screenAvailWidth = Screen.availWidth;
        data.screenAvailHeight = Screen.availHeight;
        // 浏览器的左上角距离显示器左上角的距离
        data.screenLeft = Screen.left || Win.screenLeft;
        data.screenTop = Screen.top || Win.screenTop;
        // 浏览器的左上角距离显示器可用区域左上角的距离
        data.screenAvailLeft = Screen.availLeft;
        data.screenAvailTop = Screen.availTop;
        // 是否具有localStorage
        data.localStorageEnabled = o._bool2num(Win.localStorage);
        // 是否具有sessionStorage
        data.sessionStorageEnabled = o._bool2num(Win.sessionStorage);
        // 是否具有indexedDB
        data.indexedDBEnabled = o._bool2num(Win.indexedDB);
        // CPU等级，IE
        data.CPUClass = Nav.cpuClass;
        // 平台
        data.platform = Nav.platform;
        // DoNotTrack
        data.doNotTrack = o._bool2num(Nav.doNotTrack);
        // 时区
        data.timezone = new Date().getTimezoneOffset() / 60;
        // 是否支持canvas指纹,如果不支持返回0
        data.canvas2DFP = function () {
            var canvas = Doc.createElement('canvas');
            var ctx = canvas.getContext && canvas.getContext('2d');
            if (ctx) {
                var result = [];
                // Very simple now, need to make it more complex (geo shapes etc)
                canvas.width = 2000;
                canvas.height = 200;
                canvas.style.display = "inline";
                // detect browser support of canvas winding
                // http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
                // https://github.com/Modernizr/Modernizr/blob/master/feature-detects/canvas/winding.js
                //ctx.rect(0, 0, 10, 10); 修改现有库
                // ctx.rect(2, 2, 6, 6);
                ctx.rect(0, 0, 11, 11);
                ctx.rect(3, 3, 6, 6);
                result.push("canvas winding:" + (ctx.isPointInPath(5, 5, "evenodd") === false ? "yes" : "no"));
                ctx.textBaseline = "alphabetic";
                ctx.fillStyle = "#f60";
                ctx.fillRect(125, 1, 62, 20);
                ctx.fillStyle = "#069";
                // https://github.com/Valve/fingerprintjs2/issues/66
                //忽略选项设置
                /*if (this.options.dontUseFakeFontInCanvas) {
                 ctx.font = "11pt Arial";
                 } else {
                 ctx.font = "11pt no-real-font-123";
                 }*/
                ctx.font = "11pt Arial";
                ctx.fillText('Cwm fjordbank glyphs vext quiz, \uD83D\uDE03', 2, 15);
                ctx.fillStyle = "rgba(102, 204, 0, 0.7)";
                ctx.font = "18pt Arial";
                ctx.fillText('Cwm fjordbank glyphs vext quiz, \uD83D\uDE03', 4, 45);
                // canvas blending
                // http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/
                // http://jsfiddle.net/NDYV8/16/
                ctx.globalCompositeOperation = "multiply";
                ctx.fillStyle = "rgb(255,0,255)";
                ctx.beginPath();
                // ctx.arc(50, 50, 50, 0, Math.PI * 2, true); 修改现有库
                ctx.arc(52, 50, 50, 0, Math.PI * 2, true);
                ctx.closePath();
                ctx.fill();
                ctx.fillStyle = "rgb(0,255,255)";
                ctx.beginPath();
                ctx.arc(100, 50, 50, 0, Math.PI * 2, true);
                ctx.closePath();
                ctx.fill();
                ctx.fillStyle = "rgb(255,255,0)";
                ctx.beginPath();
                ctx.arc(75, 100, 50, 0, Math.PI * 2, true);
                ctx.closePath();
                ctx.fill();
                ctx.fillStyle = "rgb(255,0,255)";
                // canvas winding
                // http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
                // http://jsfiddle.net/NDYV8/19/
                ctx.arc(75, 75, 75, 0, Math.PI * 2, true);
                ctx.arc(75, 75, 25, 0, Math.PI * 2, true);
                ctx.fill("evenodd");
                result.push("canvas fp:" + canvas.toDataURL());
                // console.log(result);
                return (0, _md2.default)(result.join("~"));
            } else {
                return o._FALSE;
            }
        }();
        // 是否支持webgl指纹,如果不支持返回0
        data.canvas3DFP = function () {
            var canvas = Doc.createElement('canvas');
            var gl = canvas.getContext && (canvas.getContext('webgl') || canvas.getContext("experimental-webgl"));
            if (gl) {
                var fa2s = function fa2s(fa) {
                    gl.clearColor(0.0, 0.0, 0.0, 1.0);
                    gl.enable(gl.DEPTH_TEST);
                    gl.depthFunc(gl.LEQUAL);
                    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
                    return "[" + fa[0] + ", " + fa[1] + "]";
                };
                var maxAnisotropy = function maxAnisotropy(gl) {
                    var anisotropy,
                        ext = gl.getExtension("EXT_texture_filter_anisotropic") || gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic") || gl.getExtension("MOZ_EXT_texture_filter_anisotropic");
                    return ext ? (anisotropy = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT), 0 === anisotropy && (anisotropy = 2), anisotropy) : null;
                };
                // WebGL fingerprinting is a combination of techniques, found in MaxMind antifraud script & Augur fingerprinting.
                // First it draws a gradient object with shaders and convers the image to the Base64 string.
                // Then it enumerates all WebGL extensions & capabilities and appends them to the Base64 string, resulting in a huge WebGL string, potentially very unique on each device
                // Since iOS supports webgl starting from version 8.1 and 8.1 runs on several graphics chips, the results may be different across ios devices, but we need to verify it.
                var result = [];
                var vShaderTemplate = "attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}";
                var fShaderTemplate = "precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}";
                var vertexPosBuffer = gl.createBuffer();
                gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);
                var vertices = new Float32Array([-.2, -.9, 0, .4, -.26, 0, 0, .732134444, 0]);
                gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
                vertexPosBuffer.itemSize = 3;
                vertexPosBuffer.numItems = 3;
                var program = gl.createProgram(),
                    vshader = gl.createShader(gl.VERTEX_SHADER);
                gl.shaderSource(vshader, vShaderTemplate);
                gl.compileShader(vshader);
                var fshader = gl.createShader(gl.FRAGMENT_SHADER);
                gl.shaderSource(fshader, fShaderTemplate);
                gl.compileShader(fshader);
                gl.attachShader(program, vshader);
                gl.attachShader(program, fshader);
                gl.linkProgram(program);
                gl.useProgram(program);
                program.vertexPosAttrib = gl.getAttribLocation(program, "attrVertex");
                program.offsetUniform = gl.getUniformLocation(program, "uniformOffset");
                gl.enableVertexAttribArray(program.vertexPosArray);
                gl.vertexAttribPointer(program.vertexPosAttrib, vertexPosBuffer.itemSize, gl.FLOAT, !1, 0, 0);
                gl.uniform2f(program.offsetUniform, 1, 1);
                gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertexPosBuffer.numItems);
                if (gl.canvas != null) {
                    result.push(gl.canvas.toDataURL());
                }
                result.push("extensions:" + gl.getSupportedExtensions().join(";"));
                result.push("webgl aliased line width range:" + fa2s(gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE)));
                result.push("webgl aliased point size range:" + fa2s(gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)));
                result.push("webgl alpha bits:" + gl.getParameter(gl.ALPHA_BITS));
                result.push("webgl antialiasing:" + (gl.getContextAttributes().antialias ? "yes" : "no"));
                result.push("webgl blue bits:" + gl.getParameter(gl.BLUE_BITS));
                result.push("webgl depth bits:" + gl.getParameter(gl.DEPTH_BITS));
                result.push("webgl green bits:" + gl.getParameter(gl.GREEN_BITS));
                result.push("webgl max anisotropy:" + maxAnisotropy(gl));
                result.push("webgl max combined texture image units:" + gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS));
                result.push("webgl max cube map texture size:" + gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE));
                result.push("webgl max fragment uniform vectors:" + gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS));
                result.push("webgl max render buffer size:" + gl.getParameter(gl.MAX_RENDERBUFFER_SIZE));
                result.push("webgl max texture image units:" + gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));
                result.push("webgl max texture size:" + gl.getParameter(gl.MAX_TEXTURE_SIZE));
                result.push("webgl max varying vectors:" + gl.getParameter(gl.MAX_VARYING_VECTORS));
                result.push("webgl max vertex attribs:" + gl.getParameter(gl.MAX_VERTEX_ATTRIBS));
                result.push("webgl max vertex texture image units:" + gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));
                result.push("webgl max vertex uniform vectors:" + gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS));
                result.push("webgl max viewport dims:" + fa2s(gl.getParameter(gl.MAX_VIEWPORT_DIMS)));
                result.push("webgl red bits:" + gl.getParameter(gl.RED_BITS));
                result.push("webgl renderer:" + gl.getParameter(gl.RENDERER));
                result.push("webgl shading language version:" + gl.getParameter(gl.SHADING_LANGUAGE_VERSION));
                result.push("webgl stencil bits:" + gl.getParameter(gl.STENCIL_BITS));
                result.push("webgl vendor:" + gl.getParameter(gl.VENDOR));
                result.push("webgl version:" + gl.getParameter(gl.VERSION));
                if (!gl.getShaderPrecisionFormat) {
                    return (0, _md2.default)(result.join("~"));
                }
                result.push("webgl vertex shader high float precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision);
                result.push("webgl vertex shader high float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin);
                result.push("webgl vertex shader high float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax);
                result.push("webgl vertex shader medium float precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision);
                result.push("webgl vertex shader medium float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin);
                result.push("webgl vertex shader medium float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax);
                result.push("webgl vertex shader low float precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision);
                result.push("webgl vertex shader low float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin);
                result.push("webgl vertex shader low float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax);
                result.push("webgl fragment shader high float precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision);
                result.push("webgl fragment shader high float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin);
                result.push("webgl fragment shader high float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax);
                result.push("webgl fragment shader medium float precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision);
                result.push("webgl fragment shader medium float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin);
                result.push("webgl fragment shader medium float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax);
                result.push("webgl fragment shader low float precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision);
                result.push("webgl fragment shader low float precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin);
                result.push("webgl fragment shader low float precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax);
                result.push("webgl vertex shader high int precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision);
                result.push("webgl vertex shader high int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin);
                result.push("webgl vertex shader high int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax);
                result.push("webgl vertex shader medium int precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision);
                result.push("webgl vertex shader medium int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin);
                result.push("webgl vertex shader medium int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax);
                result.push("webgl vertex shader low int precision:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision);
                result.push("webgl vertex shader low int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin);
                result.push("webgl vertex shader low int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax);
                result.push("webgl fragment shader high int precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision);
                result.push("webgl fragment shader high int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin);
                result.push("webgl fragment shader high int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax);
                result.push("webgl fragment shader medium int precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision);
                result.push("webgl fragment shader medium int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin);
                result.push("webgl fragment shader medium int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax);
                result.push("webgl fragment shader low int precision:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision);
                result.push("webgl fragment shader low int precision rangeMin:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin);
                result.push("webgl fragment shader low int precision rangeMax:" + gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax);
                //console.log(result);
                return (0, _md2.default)(result.join("~"));
            } else {
                return o._FALSE;
            }
        }();
        // 插件
        data.plugins = function () {
            if (!Nav.plugins) {
                return o._UNKNOWN;
            }
            var plugins = [];
            for (var i = 0, maxi = Nav.plugins.length; i < maxi; i = i + 1) {
                var plugin = Nav.plugins[i];
                //var mimeTypes = [];
                //for (var j = 0, maxj = plugin.length; j < maxj; j = j + 1) {
                //    mimeTypes.push(plugin[j].type, plugin[j].suffixes);
                //}
                //plugins.push(plugin.name, plugin.description, mimeTypes);
                plugins.push(plugin.name.replace(/\s/g, ''));
                plugins.push(plugin.filename.replace(/\s/g, ''));
            }
            return plugins.join(',');
        }();
        // 最大可触摸点数
        data.maxTouchPoints = function () {
            if (!o._isUndefined(Nav.maxTouchPoints)) {
                return Nav.maxTouchPoints;
            } else if (!o._isUndefined(Nav.msMaxTouchPoints)) {
                return Nav.msMaxTouchPoints;
            } else {
                return 0;
            }
        }();
        // flash是否可用
        data.flashEnabled = function () {
            if (o._isUndefined(Win.swfobject)) {
                return o._UNKNOWN;
            } else {
                return o._bool2num(Win.swfobject.hasFlashPlayerVersion('9.0.0'));
            }
        }();
        // java是否可用
        data.javaEnabled = function () {
            try {
                if (o._isUndefined(Nav.javaEnabled)) {
                    return o._UNKNOWN;
                } else {
                    return o._bool2num(Nav.javaEnabled());
                }
            } catch (e) {
                return o._UNKNOWN;
            }
        }();
        // 逻辑处理器个数
        data.hardwareConcurrency = Nav.hardwareConcurrency;
        data.jsFonts = function () {
            var baseFonts = ["monospace", "sans-serif", "serif"];
            var fontList = ["Andale Mono", "Arial", "Arial Black", "Arial Hebrew", "Arial MT", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Bitstream Vera Sans Mono", "Book Antiqua", "Bookman Old Style", "Calibri", "Cambria", "Cambria Math", "Century", "Century Gothic", "Century Schoolbook", "Comic Sans", "Comic Sans MS", "Consolas", "Courier", "Courier New", "Garamond", "Geneva", "Georgia", "Helvetica", "Helvetica Neue", "Impact", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "LUCIDA GRANDE", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Microsoft Sans Serif", "Monaco", "Monotype Corsiva", "MS Gothic", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Sans Serif", "MS Serif", "MYRIAD", "MYRIAD PRO", "Palatino", "Palatino Linotype", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Symbol", "Tahoma", "Times", "Times New Roman", "Times New Roman PS", "Trebuchet MS", "Verdana", "Wingdings", "Wingdings 2", "Wingdings 3"];
            var testString = "mmmmmmmmmmlli";
            //we test using 72px font size, we may use any size. I guess larger the better.
            var testSize = "72px";
            var h = document.getElementsByTagName("body")[0];
            // div to load spans for the base fonts
            var baseFontsDiv = document.createElement("div");
            // div to load spans for the fonts to detect
            var fontsDiv = document.createElement("div");
            var defaultWidth = {};
            var defaultHeight = {};
            // creates a span where the fonts will be loaded
            var createSpan = function createSpan() {
                var s = document.createElement("span");
                /*
                 * We need this css as in some weird browser this
                 * span elements shows up for a microSec which creates a
                 * bad user experience
                 */
                s.style.position = "absolute";
                s.style.left = "-9999px";
                s.style.fontSize = testSize;
                s.innerHTML = testString;
                return s;
            };
            // creates a span and load the font to detect and a base font for fallback
            var createSpanWithFonts = function createSpanWithFonts(fontToDetect, baseFont) {
                var s = createSpan();
                s.style.fontFamily = "'" + fontToDetect + "'," + baseFont;
                return s;
            };
            // creates spans for the base fonts and adds them to baseFontsDiv
            var initializeBaseFontsSpans = function initializeBaseFontsSpans() {
                var spans = [];
                for (var index = 0, length = baseFonts.length; index < length; index++) {
                    var s = createSpan();
                    s.style.fontFamily = baseFonts[index];
                    baseFontsDiv.appendChild(s);
                    spans.push(s);
                }
                return spans;
            };
            // creates spans for the fonts to detect and adds them to fontsDiv
            var initializeFontsSpans = function initializeFontsSpans() {
                var spans = {};
                for (var i = 0, l = fontList.length; i < l; i++) {
                    var fontSpans = [];
                    for (var j = 0, numDefaultFonts = baseFonts.length; j < numDefaultFonts; j++) {
                        var s = createSpanWithFonts(fontList[i], baseFonts[j]);
                        fontsDiv.appendChild(s);
                        fontSpans.push(s);
                    }
                    spans[fontList[i]] = fontSpans; // Stores {fontName : [spans for that font]}
                }
                return spans;
            };
            // checks if a font is available
            var isFontAvailable = function isFontAvailable(fontSpans) {
                var detected = false;
                for (var i = 0; i < baseFonts.length; i++) {
                    detected = fontSpans[i].offsetWidth !== defaultWidth[baseFonts[i]] || fontSpans[i].offsetHeight !== defaultHeight[baseFonts[i]];
                    if (detected) {
                        return detected;
                    }
                }
                return detected;
            };
            // create spans for base fonts
            var baseFontsSpans = initializeBaseFontsSpans();
            // add the spans to the DOM
            h.appendChild(baseFontsDiv);
            // get the default width for the three base fonts
            for (var index = 0, length = baseFonts.length; index < length; index++) {
                defaultWidth[baseFonts[index]] = baseFontsSpans[index].offsetWidth; // width for the default font
                defaultHeight[baseFonts[index]] = baseFontsSpans[index].offsetHeight; // height for the default font
            }
            // create spans for fonts to detect
            var fontsSpans = initializeFontsSpans();
            // add all the spans to the DOM
            h.appendChild(fontsDiv);
            // check available fonts
            var available = [];
            for (var i = 0, l = fontList.length; i < l; i++) {
                if (isFontAvailable(fontsSpans[fontList[i]])) {
                    available.push(fontList[i].replace(/\s/g, ''));
                }
            }
            var detfonts = available.join(',');
            // remove spans from DOM
            h.removeChild(fontsDiv);
            h.removeChild(baseFontsDiv);
            //console.log(detfonts);
            return detfonts;
        }();
        return data;
    },
    _getLength: function _getLength() {
        return this._getData().length;
    },
    _getData: function _getData(isShort) {
        var Win = window;
        var o = this;
        var staticData = o._getStaticData();
        if (stringify(o._staticData) === stringify(staticData) && isShort) {
            return 'same';
        }
        o._staticData = staticData;
        var staticDataCopy = o._getStaticData();
        o._data = staticDataCopy;
        var data = o._data;
        data.performanceTiming = function () {
            if (o._isUndefined(Win.performance)) {
                return o._UNKNOWN;
            }
            var timing = Win.performance.timing;
            var keys1 = ["navigationStart", "redirectStart", "redirectEnd", "fetchStart", "domainLookupStart", "domainLookupEnd", "connectStart", "connectEnd", "requestStart", "responseStart"];
            var keys2 = ["responseEnd", "unloadEventStart", "unloadEventEnd", "domLoading", "domInteractive", "domContentLoadedEventStart", "domContentLoadedEventEnd", "domComplete", "loadEventStart", "loadEventEnd", "msFirstPaint"];
            var r1 = [],
                i,
                len;
            for (i = 1, len = keys1.length; i < len; i = i + 1) {
                var t2 = timing[keys1[i]];
                if (t2 === 0) {
                    r1.push(o._UNKNOWN);
                } else {
                    for (var j = i - 1; j >= 0; j = j - 1) {
                        var t1 = timing[keys1[j]];
                        if (t1 !== 0) {
                            r1.push(t2 - t1);
                            // 退出本次循环
                            break;
                        }
                    }
                }
            }
            var t0 = timing[keys1[keys1.length - 1]];
            for (i = 0, len = keys2.length; i < len; i = i + 1) {
                var t = timing[keys2[i]];
                if (t === 0 || o._isUndefined(t)) {
                    r1.push(o._UNKNOWN);
                } else {
                    r1.push(t - t0);
                }
            }
            // console.log(r1.join(','));
            return r1.join(',');
        }();
        data.timestamp = (0, _now2.default)();
        var res = [];
        /*new _Array(o._getKeys())._map(function (key) {
            var val = data[key];
            res.push(o._isUndefined(val) ? o._UNKNOWN : val);
        });*/
        (0, _forEach2.default)(o._getKeys(), function (key) {
            var val = data[key];
            res.push(o._isUndefined(val) ? o._UNKNOWN : val);
        });
        return encodeURIComponent(res.join('!!'));
    }
};
var insight = new Insight();
exports.insight = insight;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
// @flow
var md5 = function md5(string) {
    function rotateLeft(lValue, iShiftBits) {
        return lValue << iShiftBits | lValue >>> 32 - iShiftBits;
    }
    function addUnsigned(lX, lY) {
        var lX4, lY4, lX8, lY8, lResult;
        lX8 = lX & 0x80000000;
        lY8 = lY & 0x80000000;
        lX4 = lX & 0x40000000;
        lY4 = lY & 0x40000000;
        lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
        if (lX4 & lY4) {
            return lResult ^ 0x80000000 ^ lX8 ^ lY8;
        }
        if (lX4 | lY4) {
            if (lResult & 0x40000000) {
                return lResult ^ 0xC0000000 ^ lX8 ^ lY8;
            } else {
                return lResult ^ 0x40000000 ^ lX8 ^ lY8;
            }
        } else {
            return lResult ^ lX8 ^ lY8;
        }
    }
    function F(x, y, z) {
        return x & y | ~x & z;
    }
    function G(x, y, z) {
        return x & z | y & ~z;
    }
    function H(x, y, z) {
        return x ^ y ^ z;
    }
    function I(x, y, z) {
        return y ^ (x | ~z);
    }
    function FF(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    }
    function GG(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    }
    function HH(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    }
    function II(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    }
    function ConvertToWordArray(string) {
        var lWordCount;
        var lMessageLength = string.length;
        var lNumberOfWords_temp1 = lMessageLength + 8;
        var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;
        var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
        var lWordArray = Array(lNumberOfWords - 1);
        var lBytePosition = 0;
        var lByteCount = 0;
        while (lByteCount < lMessageLength) {
            lWordCount = (lByteCount - lByteCount % 4) / 4;
            lBytePosition = lByteCount % 4 * 8;
            lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;
            lByteCount++;
        }
        lWordCount = (lByteCount - lByteCount % 4) / 4;
        lBytePosition = lByteCount % 4 * 8;
        lWordArray[lWordCount] = lWordArray[lWordCount] | 0x80 << lBytePosition;
        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
        return lWordArray;
    }
    function w2h(lValue) {
        var WordToHexValue = "",
            WordToHexValue_temp = "",
            lByte,
            lCount;
        for (lCount = 0; lCount <= 3; lCount++) {
            lByte = lValue >>> lCount * 8 & 255;
            WordToHexValue_temp = "0" + lByte.toString(16);
            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
        }
        return WordToHexValue;
    }
    function utf8encode(string) {
        string = string.replace(/\r\n/g, "\n");
        var utftext = "";
        for (var n = 0; n < string.length; n++) {
            var c = string.charCodeAt(n);
            if (c < 128) {
                utftext += String.fromCharCode(c);
            } else if (c > 127 && c < 2048) {
                utftext += String.fromCharCode(c >> 6 | 192);
                utftext += String.fromCharCode(c & 63 | 128);
            } else {
                utftext += String.fromCharCode(c >> 12 | 224);
                utftext += String.fromCharCode(c >> 6 & 63 | 128);
                utftext += String.fromCharCode(c & 63 | 128);
            }
        }
        return utftext;
    }
    var x = [];
    var k, AA, BB, CC, DD, a, b, c, d;
    var S11 = 7,
        S12 = 12,
        S13 = 17,
        S14 = 22;
    var S21 = 5,
        S22 = 9,
        S23 = 14,
        S24 = 20;
    var S31 = 4,
        S32 = 11,
        S33 = 16,
        S34 = 23;
    var S41 = 6,
        S42 = 10,
        S43 = 15,
        S44 = 21;
    string = utf8encode(string);
    x = ConvertToWordArray(string);
    a = 0x67452301;
    b = 0xEFCDAB89;
    c = 0x98BADCFE;
    d = 0x10325476;
    for (k = 0; k < x.length; k += 16) {
        AA = a;
        BB = b;
        CC = c;
        DD = d;
        a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
        d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
        c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
        b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
        a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
        d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
        c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
        b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
        a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
        d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
        c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
        b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
        a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
        d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
        c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
        b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
        a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
        d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
        c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
        b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
        a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
        d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
        c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
        b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
        a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
        d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
        c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
        b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
        a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
        d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
        c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
        b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
        a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
        d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
        c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
        b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
        a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
        d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
        c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
        b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
        a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
        d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
        c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
        b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
        a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
        d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
        c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
        b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
        a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
        d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
        c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
        b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
        a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
        d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
        c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
        b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
        a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
        d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
        c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
        b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
        a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
        d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
        c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
        b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
        a = addUnsigned(a, AA);
        b = addUnsigned(b, BB);
        c = addUnsigned(c, CC);
        d = addUnsigned(d, DD);
    }
    var temp = w2h(a) + w2h(b) + w2h(c) + w2h(d);
    return temp.toLowerCase();
};
exports.default = md5;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.click = undefined;

var _element = __webpack_require__(4);

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//每次点击的元素及其两层父元素的标签名，内部文字长度，元素大小
function Click() {
    var o = this;
    o._data = [];
    o._ELEMENT_NODE = document.body.nodeType;
    new _element2.default(document)._addEvent('down', function (event) {
        console.log('click');
        o._handler(event._e);
    });
} // @flow

Click.prototype = {
    _getLength: function _getLength() {
        return this._data.join('|').length;
    },
    _getData: function _getData() {
        var o = this;
        var data = o._data;
        o._data = []; //清空
        return data.join('|');
    },
    _handler: function _handler(e) {
        var o = this;
        var EMPTY = "";
        var data = o._data;
        var getInfo = function getInfo(ele) {
            var rect = ele.getBoundingClientRect();
            return [ele.nodeName, (ele.textContent || ele.innerText || '').replace(/\s+/g, '').length, Math.round(rect.right - rect.left), Math.round(rect.bottom - rect.top)].join(',');
        };
        var ele = e.target || e.srcElement;
        if (ele && ele.nodeType === o._ELEMENT_NODE) {
            data.push(getInfo(ele));
            ele = ele.parentNode;
            if (ele && ele.nodeType === o._ELEMENT_NODE) {
                data.push(getInfo(ele));
                ele = ele.parentNode;
                if (ele && ele.nodeType === o._ELEMENT_NODE) {
                    data.push(getInfo(ele));
                } else {
                    data.push(EMPTY);
                }
            } else {
                data.push(EMPTY, EMPTY);
            }
        } else {
            data.push(EMPTY, EMPTY, EMPTY);
        }
    }
};
var click = new Click();
exports.click = click;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;(true);
exports.path = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; // @flow
/**
 * @constructor
 */


var _element = __webpack_require__(4);

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//遍历点击的元素至顶部，:地址 .类名 @ID
function Path() {
    var o = this;
    o._data = [];
    new _element2.default(document)._addEvent('down', function (event) {
        o._data.push(o._getPath(event._e));
    });
}
Path.prototype = {
    _getLength: function _getLength() {
        return this._data.join(',').length;
    },
    _getData: function _getData() {
        var o = this;
        var data = o._data;
        o._data = []; //清空
        return data.join(',');
    },
    //获取实际目标的信息包括 tagname class id 并按照预先格式返回
    _getPath: function _getPath(event) {
        var ev = event || window.event;
        var target;
        if (ev.target) {
            target = ev.target;
        } else if (ev.srcElement) {
            target = ev.srcElement;
        }
        var getInfo = function getInfo(ele) {
            var str = ele.tagName;
            if (ele.id) {
                str += '@' + ele.id;
            }
            if (ele.className) {
                var newClassName = ele.className;
                if (_typeof(ele.className) === 'object') {
                    newClassName = ele.className.baseVal;
                }
                str += '.' + newClassName.replace(/^\s*/, '').replace(/\s*$/, '').replace(/\s+/g, '.');
            }
            if ((str === 'A' || str === 'a') && ele.href) {
                str += ':' + ele.href;
            }
            return str;
        };
        var traversal = function traversal(ele) {
            if (!ele) {
                return 'null';
            } else if (ele === document || ele === document.documentElement || ele === document.body) {
                return getInfo(ele);
            } else {
                return getInfo(ele) + '|' + traversal(ele.parentNode);
            }
        };
        return traversal(target);
    }
};
var path = new Path();
exports.path = path;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _envConstants = __webpack_require__(5);

function getStack() {
    function leach(v) {
        if (!v.push) {
            return v.replace(/\s+/g, '').slice(0, 2 << 3);
        }
        var a = [],
            i = -1,
            l = v.length;
        for (; ++i < l;) {
            a.push(leach(v[i]));
        }
        return a.join('#');
    }
    function short(v) {
        var p = [0, v.charCodeAt(v.length - 1) > 8 << 9 ? 2 : 2 << 1];
        return '\x25'.slice.apply(v, p);
    }
    if (_envConstants.ieVersion === 6 || _envConstants.ieVersion === 7) {
        return undefined;
    }
    try {
        var a = '\x13\x79'.split('x');

        return a[1]() + a.substring(1);
    } catch (a) {
        var k = ['description', 'message', 'name', 'number', 'stack'],
            i = -1,
            l = k.length,
            t = a,
            s,
            o = ' ',
            r = {};
        for (; ++i < l;) {
            if (a = t[s = k[i]]) {
                a = (o + a).slice(1);
                r[s.slice(0, 2)] = encodeURIComponent(leach(i == l - 1 ? a.split(/[\r|\n]/g) : i < 2 ? short(a) : a));
            }
        }
        return r.ts = short('' + t), r;
        // {
        //     description,  只有IE全系列才支持
        //     message,      √
        //     name,         √
        //     number,       只有IE全系列才支持
        //     stack,        IE8- 不支持   * #号代表换行 *
        //     toString      √   IE8-不支持JSON,会变成简陋的 [object Error]
        //   }
    }
} /*
  * @description 通过try-catch抛出异常，检查模拟器
   */

var e = getStack();
exports.default = e;

/***/ })
/******/ ]);